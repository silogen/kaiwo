//go:build !ignore_autogenerated

// Copyright 2025 Advanced Micro Devices, Inc.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	rayv1 "github.com/ray-project/kuberay/ray-operator/apis/ray/v1"
	appsv1 "k8s.io/api/apps/v1"
	batchv1 "k8s.io/api/batch/v1"
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/kueue/apis/kueue/v1beta1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageDownloadItem) DeepCopyInto(out *AzureBlobStorageDownloadItem) {
	*out = *in
	out.ConnectionString = in.ConnectionString
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]CloudDownloadBucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageDownloadItem.
func (in *AzureBlobStorageDownloadItem) DeepCopy() *AzureBlobStorageDownloadItem {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageDownloadItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudDownloadBucket) DeepCopyInto(out *CloudDownloadBucket) {
	*out = *in
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]CloudDownloadFile, len(*in))
		copy(*out, *in)
	}
	if in.Folders != nil {
		in, out := &in.Folders, &out.Folders
		*out = make([]CloudDownloadFolder, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudDownloadBucket.
func (in *CloudDownloadBucket) DeepCopy() *CloudDownloadBucket {
	if in == nil {
		return nil
	}
	out := new(CloudDownloadBucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudDownloadFile) DeepCopyInto(out *CloudDownloadFile) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudDownloadFile.
func (in *CloudDownloadFile) DeepCopy() *CloudDownloadFile {
	if in == nil {
		return nil
	}
	out := new(CloudDownloadFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudDownloadFolder) DeepCopyInto(out *CloudDownloadFolder) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudDownloadFolder.
func (in *CloudDownloadFolder) DeepCopy() *CloudDownloadFolder {
	if in == nil {
		return nil
	}
	out := new(CloudDownloadFolder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterQueue) DeepCopyInto(out *ClusterQueue) {
	*out = *in
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterQueue.
func (in *ClusterQueue) DeepCopy() *ClusterQueue {
	if in == nil {
		return nil
	}
	out := new(ClusterQueue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonMetaSpec) DeepCopyInto(out *CommonMetaSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodTemplateSpecLabels != nil {
		in, out := &in.PodTemplateSpecLabels, &out.PodTemplateSpecLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretVolumes != nil {
		in, out := &in.SecretVolumes, &out.SecretVolumes
		*out = make([]SecretVolume, len(*in))
		copy(*out, *in)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonMetaSpec.
func (in *CommonMetaSpec) DeepCopy() *CommonMetaSpec {
	if in == nil {
		return nil
	}
	out := new(CommonMetaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStorageSpec) DeepCopyInto(out *DataStorageSpec) {
	*out = *in
	in.Download.DeepCopyInto(&out.Download)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStorageSpec.
func (in *DataStorageSpec) DeepCopy() *DataStorageSpec {
	if in == nil {
		return nil
	}
	out := new(DataStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownloadTaskConfig) DeepCopyInto(out *DownloadTaskConfig) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3DownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCS != nil {
		in, out := &in.GCS, &out.GCS
		*out = make([]GCSDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HF != nil {
		in, out := &in.HF, &out.HF
		*out = make([]HuggingFaceDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobStorageDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = make([]GitDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownloadTaskConfig.
func (in *DownloadTaskConfig) DeepCopy() *DownloadTaskConfig {
	if in == nil {
		return nil
	}
	out := new(DownloadTaskConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCSDownloadItem) DeepCopyInto(out *GCSDownloadItem) {
	*out = *in
	out.ApplicationCredentials = in.ApplicationCredentials
	if in.Buckets != nil {
		in, out := &in.Buckets, &out.Buckets
		*out = make([]CloudDownloadBucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCSDownloadItem.
func (in *GCSDownloadItem) DeepCopy() *GCSDownloadItem {
	if in == nil {
		return nil
	}
	out := new(GCSDownloadItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitDownloadItem) DeepCopyInto(out *GitDownloadItem) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(ValueReference)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(ValueReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitDownloadItem.
func (in *GitDownloadItem) DeepCopy() *GitDownloadItem {
	if in == nil {
		return nil
	}
	out := new(GitDownloadItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HfStorageSpec) DeepCopyInto(out *HfStorageSpec) {
	*out = *in
	if in.PreCacheRepos != nil {
		in, out := &in.PreCacheRepos, &out.PreCacheRepos
		*out = make([]HuggingFaceDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HfStorageSpec.
func (in *HfStorageSpec) DeepCopy() *HfStorageSpec {
	if in == nil {
		return nil
	}
	out := new(HfStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HuggingFaceDownloadItem) DeepCopyInto(out *HuggingFaceDownloadItem) {
	*out = *in
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HuggingFaceDownloadItem.
func (in *HuggingFaceDownloadItem) DeepCopy() *HuggingFaceDownloadItem {
	if in == nil {
		return nil
	}
	out := new(HuggingFaceDownloadItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoJob) DeepCopyInto(out *KaiwoJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoJob.
func (in *KaiwoJob) DeepCopy() *KaiwoJob {
	if in == nil {
		return nil
	}
	out := new(KaiwoJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoJobList) DeepCopyInto(out *KaiwoJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KaiwoJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoJobList.
func (in *KaiwoJobList) DeepCopy() *KaiwoJobList {
	if in == nil {
		return nil
	}
	out := new(KaiwoJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoJobSpec) DeepCopyInto(out *KaiwoJobSpec) {
	*out = *in
	in.CommonMetaSpec.DeepCopyInto(&out.CommonMetaSpec)
	if in.RayJob != nil {
		in, out := &in.RayJob, &out.RayJob
		*out = new(rayv1.RayJob)
		(*in).DeepCopyInto(*out)
	}
	if in.Job != nil {
		in, out := &in.Job, &out.Job
		*out = new(batchv1.Job)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoJobSpec.
func (in *KaiwoJobSpec) DeepCopy() *KaiwoJobSpec {
	if in == nil {
		return nil
	}
	out := new(KaiwoJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoJobStatus) DeepCopyInto(out *KaiwoJobStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoJobStatus.
func (in *KaiwoJobStatus) DeepCopy() *KaiwoJobStatus {
	if in == nil {
		return nil
	}
	out := new(KaiwoJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoQueueConfig) DeepCopyInto(out *KaiwoQueueConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoQueueConfig.
func (in *KaiwoQueueConfig) DeepCopy() *KaiwoQueueConfig {
	if in == nil {
		return nil
	}
	out := new(KaiwoQueueConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoQueueConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoQueueConfigList) DeepCopyInto(out *KaiwoQueueConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KaiwoQueueConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoQueueConfigList.
func (in *KaiwoQueueConfigList) DeepCopy() *KaiwoQueueConfigList {
	if in == nil {
		return nil
	}
	out := new(KaiwoQueueConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoQueueConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoQueueConfigSpec) DeepCopyInto(out *KaiwoQueueConfigSpec) {
	*out = *in
	if in.ClusterQueues != nil {
		in, out := &in.ClusterQueues, &out.ClusterQueues
		*out = make([]ClusterQueue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceFlavors != nil {
		in, out := &in.ResourceFlavors, &out.ResourceFlavors
		*out = make([]ResourceFlavorSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkloadPriorityClasses != nil {
		in, out := &in.WorkloadPriorityClasses, &out.WorkloadPriorityClasses
		*out = make([]v1beta1.WorkloadPriorityClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoQueueConfigSpec.
func (in *KaiwoQueueConfigSpec) DeepCopy() *KaiwoQueueConfigSpec {
	if in == nil {
		return nil
	}
	out := new(KaiwoQueueConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoQueueConfigStatus) DeepCopyInto(out *KaiwoQueueConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoQueueConfigStatus.
func (in *KaiwoQueueConfigStatus) DeepCopy() *KaiwoQueueConfigStatus {
	if in == nil {
		return nil
	}
	out := new(KaiwoQueueConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoService) DeepCopyInto(out *KaiwoService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoService.
func (in *KaiwoService) DeepCopy() *KaiwoService {
	if in == nil {
		return nil
	}
	out := new(KaiwoService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoServiceList) DeepCopyInto(out *KaiwoServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KaiwoService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoServiceList.
func (in *KaiwoServiceList) DeepCopy() *KaiwoServiceList {
	if in == nil {
		return nil
	}
	out := new(KaiwoServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KaiwoServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoServiceSpec) DeepCopyInto(out *KaiwoServiceSpec) {
	*out = *in
	in.CommonMetaSpec.DeepCopyInto(&out.CommonMetaSpec)
	if in.RayService != nil {
		in, out := &in.RayService, &out.RayService
		*out = new(rayv1.RayService)
		(*in).DeepCopyInto(*out)
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(appsv1.Deployment)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoServiceSpec.
func (in *KaiwoServiceSpec) DeepCopy() *KaiwoServiceSpec {
	if in == nil {
		return nil
	}
	out := new(KaiwoServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KaiwoServiceStatus) DeepCopyInto(out *KaiwoServiceStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KaiwoServiceStatus.
func (in *KaiwoServiceStatus) DeepCopy() *KaiwoServiceStatus {
	if in == nil {
		return nil
	}
	out := new(KaiwoServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectStorageDownloadSpec) DeepCopyInto(out *ObjectStorageDownloadSpec) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3DownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCS != nil {
		in, out := &in.GCS, &out.GCS
		*out = make([]GCSDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobStorageDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = make([]GitDownloadItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectStorageDownloadSpec.
func (in *ObjectStorageDownloadSpec) DeepCopy() *ObjectStorageDownloadSpec {
	if in == nil {
		return nil
	}
	out := new(ObjectStorageDownloadSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceFlavorSpec) DeepCopyInto(out *ResourceFlavorSpec) {
	*out = *in
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]v1.Taint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceFlavorSpec.
func (in *ResourceFlavorSpec) DeepCopy() *ResourceFlavorSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceFlavorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DownloadItem) DeepCopyInto(out *S3DownloadItem) {
	*out = *in
	out.AccessKeyId = in.AccessKeyId
	out.SecretKey = in.SecretKey
	if in.Buckets != nil {
		in, out := &in.Buckets, &out.Buckets
		*out = make([]CloudDownloadBucket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DownloadItem.
func (in *S3DownloadItem) DeepCopy() *S3DownloadItem {
	if in == nil {
		return nil
	}
	out := new(S3DownloadItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretVolume) DeepCopyInto(out *SecretVolume) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretVolume.
func (in *SecretVolume) DeepCopy() *SecretVolume {
	if in == nil {
		return nil
	}
	out := new(SecretVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSpec) DeepCopyInto(out *StorageSpec) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(DataStorageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.HuggingFace != nil {
		in, out := &in.HuggingFace, &out.HuggingFace
		*out = new(HfStorageSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSpec.
func (in *StorageSpec) DeepCopy() *StorageSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueReference) DeepCopyInto(out *ValueReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueReference.
func (in *ValueReference) DeepCopy() *ValueReference {
	if in == nil {
		return nil
	}
	out := new(ValueReference)
	in.DeepCopyInto(out)
	return out
}
