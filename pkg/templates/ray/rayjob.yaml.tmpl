apiVersion: ray.io/v1
kind: RayJob
metadata:
  name: {{ .Base.Name }}
  namespace: {{ .Base.Namespace }}
  labels:
    kueue.x-k8s.io/queue-name: {{ .Base.Queue }}
spec:
  shutdownAfterJobFinishes: true
  ttlSecondsAfterFinished: {{ mul .Base.TtlMinAfterFinished 60 }}
  entrypoint: |
{{ .Workload.Entrypoint | indent 4 }}
  rayClusterSpec:
    rayVersion: "2.9.0"
    enableInTreeAutoscaling: false # cannot be true when using Kueue
    headGroupSpec:
      rayStartParams: {}
      template:
        spec:
          containers:
            - name: ray-head
              image: {{ .Base.Image }}
              imagePullPolicy: Always
              env:
              {{- if .EnvVars }}
              {{- range .EnvVars }}
              {{- if .Value }}
                - name: {{ .Name }}
                  value: "{{ .Value }}"
              {{- else }}
                - name: {{ .Name }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ .ValueFrom.SecretKeyRef.Name }}
                      key: {{ .ValueFrom.SecretKeyRef.Key }}
              {{- end }}
              {{- end }}
              {{- end }}
              resources:
                limits:
                  cpu: "2"
                  memory: "16Gi"
                requests:
                  cpu: "2"
                  memory: "16Gi"
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265
                  name: dashboard
                - containerPort: 10001
                  name: client
              volumeMounts:
              {{- if .SecretVolumes }}
              {{- range .SecretVolumes }}
                - name: {{ .Name }}
                  mountPath: {{ .MountPath }}
                  subPath: {{ .SubPath }}
              {{- end }}
              {{- end }}
              {{- if .Base.ConfigMap }}
                - mountPath: /workload
                  name: workload
              {{- end }}
                - mountPath: /dev/shm
                  name: dshm
          volumes:
          {{- if .SecretVolumes }}
          {{- range .SecretVolumes }}
            - name: {{ .Name }}
              secret:
                secretName: {{ .SecretName }}
                items:
                  - key: {{ .Key }}
                    path: {{ .SubPath }}
          {{- end }}
          {{- end }}
          {{- if .Base.ConfigMap }}
            - name: workload
              configMap:
                name: {{ .Base.Name }}
          {{- end }}
            - name: dshm
              emptyDir:
                medium: Memory
                sizeLimit: 200Gi
    workerGroupSpecs:
      - replicas: {{ .Workload.Kueue.RequestedNumReplicas }}
        # Not used as enableInTreeAutoscaling is false
        # minReplicas: 1
        # maxReplicas: 1
        groupName: small-group
        rayStartParams: {}
        template:
          spec:
            containers:
              - name: ray-worker
                image: {{ .Base.Image }}
                imagePullPolicy: Always
                env:
                {{- if .EnvVars }}
                {{- range .EnvVars }}
                {{- if .Value }}
                  - name: {{ .Name }}
                    value: "{{ .Value }}"
                {{- else }}
                  - name: {{ .Name }}
                    valueFrom:
                      secretKeyRef:
                        name: {{ .ValueFrom.SecretKeyRef.Name }}
                        key: {{ .ValueFrom.SecretKeyRef.Key }}
                {{- end }}
                {{- end }}
                {{- end }}
                ports:
                  - containerPort: 6379
                    name: gcs-server
                  - containerPort: 8265
                    name: dashboard
                  - containerPort: 10001
                    name: client
                resources:
                    limits:
                        cpu: "{{ mul .Workload.Kueue.RequestedGPUsPerReplica 4 }}"
                        memory: "{{ mul .Workload.Kueue.RequestedGPUsPerReplica 32 }}Gi"
                        amd.com/gpu: "{{ .Workload.Kueue.RequestedGPUsPerReplica }}"
                    requests:
                        cpu: "{{ mul .Workload.Kueue.RequestedGPUsPerReplica 4 }}"
                        memory: "{{ mul .Workload.Kueue.RequestedGPUsPerReplica 32 }}Gi"
                        amd.com/gpu: "{{ .Workload.Kueue.RequestedGPUsPerReplica }}"
                volumeMounts: 
                {{- if .SecretVolumes }}
                {{- range .SecretVolumes }}
                  - name: {{ .Name }}
                    mountPath: {{ .MountPath }}
                    subPath: {{ .SubPath }}
                {{- end }}
                {{- end }}
                {{- if .Base.ConfigMap }}
                  - mountPath: /workload
                    name: workload
                {{- end }}
                  - mountPath: /dev/shm
                    name: dshm
            volumes:
            {{- if .SecretVolumes }}
            {{- range .SecretVolumes }}
              - name: {{ .Name }}
                secret:
                  secretName: {{ .SecretName }}
                  items:
                    - key: {{ .Key }}
                      path: {{ .SubPath }}
            {{- end }}
            {{- end }}
            {{- if .Base.ConfigMap }}
              - name: workload
                configMap:
                  name: {{ .Base.Name }}
            {{- end }}
              - name: dshm
                emptyDir:
                  medium: Memory
                  sizeLimit: 200Gi