name: compile-release
on:
  push:
    tags:
    - "v*"
env:
  REPO: github.com/silogen/cluster-forge.git

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Extract version from tag
      shell: bash
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "Using version: ${VERSION}"

    - name: Run build script for CLI
      shell: bash
      run: |
        set -e
        chmod +x build_cli_all_arch.sh
        ./build_cli_all_arch.sh "$VERSION"

    - name: Compress workloads
      shell: bash
      run: |
        zip -r workloads.zip ./workloads

    - name: Log in to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

    - name: Build and push operator image
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/kaiwo-operator
        TAG=${{ env.VERSION }}

        # Build the Docker image
        make docker-build IMG=$IMAGE_NAME:$TAG

        # Push the image
        make docker-push IMG=$IMAGE_NAME:$TAG

    - name: Generate install.yaml
      run: |
        make build-installer TAG=${{ env.VERSION }}
        cp dist/install.yaml install.yaml


    - name: Upload install.yaml artifact
      uses: actions/upload-artifact@v4
      with:
        name: install-yaml
        path: install.yaml


    - name: Create draft release and upload assets
      uses: softprops/action-gh-release@v2
      with:
        files: |
          builds/*
          workloads.zip
          install.yaml
        token: '${{ secrets.GITHUB_TOKEN }}'
        draft: true
        prerelease: true
  sync-to-cluster-forge:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout cluster-forge
      run: |
        git clone https://x-access-token:${{ secrets.CLUSTER_FORGE_PAT }}@${{ env.REPO }} cluster-forge 
        cd cluster-forge
        git checkout -b kaiwo-release-${{ env.VERSION }}

    - name: Download install.yaml artifact
      uses: actions/download-artifact@v4
      with:
        name: install-yaml

    - name: Check if install.yaml changed
      id: check_diff
      run: |
        cp install.yaml cluster-forge/input/kaiwo/install.yaml
        cd cluster-forge
        if ! git diff --quiet input/kaiwo/install.yaml; then
          echo "changed=true" >> "$GITHUB_OUTPUT"
        else
          echo "No changes to commit."
          echo "changed=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Commit install.yaml via GitHub API
      if: steps.check_diff.outputs.changed == 'true'
      run: |
        cd cluster-forge
        FILE_PATH="input/kaiwo/install.yaml"
        ENCODED_CONTENT=$(base64 -w0 $FILE_PATH)
        HEAD_OID=$(git rev-parse HEAD)

        gh api graphql \
          -F githubRepository="${{ env.REPO }}" \
          -F branchName="${{ env.BRANCH }}" \
          -F expectedHeadOid="$HEAD_OID" \
          -F commitMessage="Update kaiwo install.yaml for version ${{ env.VERSION }}" \
          -F files[][path]="$FILE_PATH" \
          -F files[][contents]="$ENCODED_CONTENT" \
          -F 'query=@.github/api/createCommitOnBranch.gql'
      env:
        # GH_TOKEN: ${{ secrets.CLUSTER_FORGE_PAT }}
        GH_TOKEN: ${{ github.token }}

    - name: Create Pull Request
      if: steps.check_diff.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.CLUSTER_FORGE_PAT }}
        path: cluster-forge
        commit-message: "Update kaiwo install.yaml for version ${{ env.VERSION }}"
        branch: kaiwo-release-${{ env.VERSION }}
        title: "Update kaiwo install.yaml for ${{ env.VERSION }}"
        base: main
