name: compile-release
on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        id: cache-kaiwo-modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Extract version from tag
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "Using version: ${VERSION}"

      - name: Set release upload URL
        shell: bash
        run: |
          # The event payload provides an upload_url with a template, e.g.:
          # "https://uploads.github.com/repos/owner/repo/releases/123/assets{?name,label}"
          # Remove the template part.
          UPLOAD_URL=$(echo "${{ github.event.release.upload_url }}" | sed 's/{.*}//')
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
          echo "Upload URL set to: $UPLOAD_URL"

      - name: Run build script
        shell: bash
        run: |
          set -e
          chmod +x build_cli_all_arch.sh
          ./build_cli_all_arch.sh "$VERSION"

      - name: Upload compiled binaries
        shell: bash
        run: |
          set -e
          for file in builds/*; do
            echo "Uploading $file..."
            curl --fail -s --data-binary @"$file" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              "${UPLOAD_URL}?name=$(basename "$file")"
          done

      - name: Compress workloads
        shell: bash
        run: |
          zip -r workloads.zip ./workloads

      - name: Upload workloads
        shell: bash
        run: |
          set -e
          echo "Uploading workloads..."
          curl --fail -s --data-binary @"workloads.zip" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            "${UPLOAD_URL}?name=workloads.zip"

      - name: Upload workloads asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./workloads.zip
          asset_name: workloads.zip
          asset_content_type: application/zip