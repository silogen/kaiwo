//go:build !ignore_autogenerated

// MIT License
//
// Copyright (c) 2025 Advanced Micro Devices, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainPolicy) DeepCopyInto(out *DrainPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainPolicy.
func (in *DrainPolicy) DeepCopy() *DrainPolicy {
	if in == nil {
		return nil
	}
	out := new(DrainPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpectedResource) DeepCopyInto(out *ExpectedResource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpectedResource.
func (in *ExpectedResource) DeepCopy() *ExpectedResource {
	if in == nil {
		return nil
	}
	out := new(ExpectedResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePartitioning) DeepCopyInto(out *NodePartitioning) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePartitioning.
func (in *NodePartitioning) DeepCopy() *NodePartitioning {
	if in == nil {
		return nil
	}
	out := new(NodePartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodePartitioning) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePartitioningHistoryEntry) DeepCopyInto(out *NodePartitioningHistoryEntry) {
	*out = *in
	in.At.DeepCopyInto(&out.At)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePartitioningHistoryEntry.
func (in *NodePartitioningHistoryEntry) DeepCopy() *NodePartitioningHistoryEntry {
	if in == nil {
		return nil
	}
	out := new(NodePartitioningHistoryEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePartitioningList) DeepCopyInto(out *NodePartitioningList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodePartitioning, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePartitioningList.
func (in *NodePartitioningList) DeepCopy() *NodePartitioningList {
	if in == nil {
		return nil
	}
	out := new(NodePartitioningList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodePartitioningList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePartitioningSpec) DeepCopyInto(out *NodePartitioningSpec) {
	*out = *in
	out.PlanRef = in.PlanRef
	out.ProfileRef = in.ProfileRef
	out.DrainPolicy = in.DrainPolicy
	in.Verification.DeepCopyInto(&out.Verification)
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(RetryPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePartitioningSpec.
func (in *NodePartitioningSpec) DeepCopy() *NodePartitioningSpec {
	if in == nil {
		return nil
	}
	out := new(NodePartitioningSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePartitioningStatus) DeepCopyInto(out *NodePartitioningStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]NodePartitioningHistoryEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePartitioningStatus.
func (in *NodePartitioningStatus) DeepCopy() *NodePartitioningStatus {
	if in == nil {
		return nil
	}
	out := new(NodePartitioningStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeStatusSummary) DeepCopyInto(out *NodeStatusSummary) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeStatusSummary.
func (in *NodeStatusSummary) DeepCopy() *NodeStatusSummary {
	if in == nil {
		return nil
	}
	out := new(NodeStatusSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorPayloadReference) DeepCopyInto(out *OperatorPayloadReference) {
	*out = *in
	if in.Inline != nil {
		in, out := &in.Inline, &out.Inline
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorPayloadReference.
func (in *OperatorPayloadReference) DeepCopy() *OperatorPayloadReference {
	if in == nil {
		return nil
	}
	out := new(OperatorPayloadReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningPlan) DeepCopyInto(out *PartitioningPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningPlan.
func (in *PartitioningPlan) DeepCopy() *PartitioningPlan {
	if in == nil {
		return nil
	}
	out := new(PartitioningPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PartitioningPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningPlanList) DeepCopyInto(out *PartitioningPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PartitioningPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningPlanList.
func (in *PartitioningPlanList) DeepCopy() *PartitioningPlanList {
	if in == nil {
		return nil
	}
	out := new(PartitioningPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PartitioningPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningPlanSpec) DeepCopyInto(out *PartitioningPlanSpec) {
	*out = *in
	out.Rollout = in.Rollout
	in.Verification.DeepCopyInto(&out.Verification)
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new(PlanDefaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Partitionings != nil {
		in, out := &in.Partitionings, &out.Partitionings
		*out = make([]PartitioningRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningPlanSpec.
func (in *PartitioningPlanSpec) DeepCopy() *PartitioningPlanSpec {
	if in == nil {
		return nil
	}
	out := new(PartitioningPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningPlanStatus) DeepCopyInto(out *PartitioningPlanStatus) {
	*out = *in
	out.Summary = in.Summary
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastSyncTime != nil {
		in, out := &in.LastSyncTime, &out.LastSyncTime
		*out = (*in).DeepCopy()
	}
	if in.NodeStatuses != nil {
		in, out := &in.NodeStatuses, &out.NodeStatuses
		*out = make([]NodeStatusSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningPlanStatus.
func (in *PartitioningPlanStatus) DeepCopy() *PartitioningPlanStatus {
	if in == nil {
		return nil
	}
	out := new(PartitioningPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningProfile) DeepCopyInto(out *PartitioningProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningProfile.
func (in *PartitioningProfile) DeepCopy() *PartitioningProfile {
	if in == nil {
		return nil
	}
	out := new(PartitioningProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PartitioningProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningProfileList) DeepCopyInto(out *PartitioningProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PartitioningProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningProfileList.
func (in *PartitioningProfileList) DeepCopy() *PartitioningProfileList {
	if in == nil {
		return nil
	}
	out := new(PartitioningProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PartitioningProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningProfileSpec) DeepCopyInto(out *PartitioningProfileSpec) {
	*out = *in
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpectedResources != nil {
		in, out := &in.ExpectedResources, &out.ExpectedResources
		*out = make([]ExpectedResource, len(*in))
		copy(*out, *in)
	}
	in.Verification.DeepCopyInto(&out.Verification)
	in.OperatorPayload.DeepCopyInto(&out.OperatorPayload)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningProfileSpec.
func (in *PartitioningProfileSpec) DeepCopy() *PartitioningProfileSpec {
	if in == nil {
		return nil
	}
	out := new(PartitioningProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningProfileStatus) DeepCopyInto(out *PartitioningProfileStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningProfileStatus.
func (in *PartitioningProfileStatus) DeepCopy() *PartitioningProfileStatus {
	if in == nil {
		return nil
	}
	out := new(PartitioningProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitioningRule) DeepCopyInto(out *PartitioningRule) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	out.ProfileRef = in.ProfileRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitioningRule.
func (in *PartitioningRule) DeepCopy() *PartitioningRule {
	if in == nil {
		return nil
	}
	out := new(PartitioningRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanDefaults) DeepCopyInto(out *PlanDefaults) {
	*out = *in
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(RetryPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanDefaults.
func (in *PlanDefaults) DeepCopy() *PlanDefaults {
	if in == nil {
		return nil
	}
	out := new(PlanDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanReference) DeepCopyInto(out *PlanReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanReference.
func (in *PlanReference) DeepCopy() *PlanReference {
	if in == nil {
		return nil
	}
	out := new(PlanReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanSummary) DeepCopyInto(out *PlanSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanSummary.
func (in *PlanSummary) DeepCopy() *PlanSummary {
	if in == nil {
		return nil
	}
	out := new(PlanSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileReference) DeepCopyInto(out *ProfileReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileReference.
func (in *ProfileReference) DeepCopy() *ProfileReference {
	if in == nil {
		return nil
	}
	out := new(ProfileReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicy) DeepCopyInto(out *RetryPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicy.
func (in *RetryPolicy) DeepCopy() *RetryPolicy {
	if in == nil {
		return nil
	}
	out := new(RetryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutPolicy) DeepCopyInto(out *RolloutPolicy) {
	*out = *in
	out.DrainPolicy = in.DrainPolicy
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutPolicy.
func (in *RolloutPolicy) DeepCopy() *RolloutPolicy {
	if in == nil {
		return nil
	}
	out := new(RolloutPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerificationSpec) DeepCopyInto(out *VerificationSpec) {
	*out = *in
	if in.RequirePluginResources != nil {
		in, out := &in.RequirePluginResources, &out.RequirePluginResources
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationSpec.
func (in *VerificationSpec) DeepCopy() *VerificationSpec {
	if in == nil {
		return nil
	}
	out := new(VerificationSpec)
	in.DeepCopyInto(out)
	return out
}
