---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: aimservices.aim.silogen.ai
spec:
  group: aim.silogen.ai
  names:
    categories:
    - aim
    - all
    kind: AIMService
    listKind: AIMServiceList
    plural: aimservices
    shortNames:
    - aimsvc
    singular: aimservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .spec.aimImageName
      name: Image
      type: string
    - jsonPath: .status.resolvedTemplateRef
      name: Template
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AIMService manages a KServe-based AIM inference service for the
          selected model and template.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AIMServiceSpec defines the desired state of AIMService.

              Binds a canonical model to an AIMServiceTemplate and configures replicas,
              caching behavior, and optional overrides. The template governs the base
              runtime selection knobs, while the overrides field allows service-specific
              customization.
            properties:
              aimImageName:
                description: |-
                  AIMImageName is the canonical model name (including version/revision) to deploy.
                  Expected to match the `spec.metadata.name` of an AIMImage. Example:
                  `meta-llama-3-8b-1-1-20240915`.
                minLength: 1
                type: string
              cacheModel:
                default: false
                description: |-
                  CacheModel requests that model sources be cached when starting the service
                  if the template itself does not warm the cache.
                  When `warmCache: false` on the template, this setting ensures caching is
                  performed before the service becomes ready.
                type: boolean
              env:
                description: |-
                  Env specifies environment variables to use for authentication when downloading models.
                  These variables are used for authentication with model registries (e.g., HuggingFace tokens).
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              imagePullSecrets:
                description: ImagePullSecrets references secrets for pulling AIM container
                  images.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              overrides:
                description: |-
                  Overrides allows overriding specific template parameters for this service.
                  When specified, these values take precedence over the template values.
                properties:
                  gpuSelector:
                    description: AimGpuSelector contains the strategy to choose the
                      resources to give each replica
                    properties:
                      count:
                        description: Count is the number of the GPU resources requested
                          per replica
                        format: int32
                        minimum: 1
                        type: integer
                      model:
                        description: Model is the model name of the GPU that is supported
                          by this template
                        minLength: 1
                        type: string
                    required:
                    - count
                    - model
                    type: object
                    x-kubernetes-validations:
                    - message: gpuSelector is immutable
                      rule: self == oldSelf
                  metric:
                    allOf:
                    - enum:
                      - latency
                      - throughput
                    - enum:
                      - latency
                      - throughput
                    description: |-
                      Metric selects the optimization goal.

                      - `latency`: prioritize low end‑to‑end latency
                      - `throughput`: prioritize sustained requests/second
                    type: string
                    x-kubernetes-validations:
                    - message: metric is immutable
                      rule: self == oldSelf
                  precision:
                    allOf:
                    - enum:
                      - bf16
                      - fp16
                      - fp8
                      - int8
                    - enum:
                      - auto
                      - fp4
                      - fp8
                      - fp16
                      - fp32
                      - bf16
                      - int4
                      - int8
                    description: Precision selects the numeric precision used by the
                      runtime.
                    type: string
                    x-kubernetes-validations:
                    - message: precision is immutable
                      rule: self == oldSelf
                type: object
              replicas:
                default: 1
                description: |-
                  Replicas overrides the number of replicas for this service.
                  Other runtime settings remain governed by the template unless overridden.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources overrides the container resource requirements for this service.
                  When specified, these values take precedence over the template and image defaults.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              routing:
                description: Routing enables HTTP routing through Gateway API for
                  this service.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to add to the HTTPRoute resource.
                    type: object
                  enabled:
                    default: false
                    description: Enabled toggles HTTP routing management.
                    type: boolean
                  gatewayRef:
                    description: |-
                      GatewayRef identifies the Gateway parent that should receive the HTTPRoute.
                      When omitted while routing is enabled, reconciliation will report a failure.
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: |-
                          Group is the group of the referent.
                          When unspecified, "gateway.networking.k8s.io" is inferred.
                          To set the core API group (such as for a "Service" kind referent),
                          Group must be explicitly set to "" (empty string).

                          Support: Core
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: |-
                          Kind is kind of the referent.

                          There are two kinds of parent resources with "Core" support:

                          * Gateway (Gateway conformance profile)
                          * Service (Mesh conformance profile, ClusterIP Services only)

                          Support for other resources is Implementation-Specific.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: |-
                          Name is the name of the referent.

                          Support: Core
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of the referent. When unspecified, this refers
                          to the local namespace of the Route.

                          Note that there are specific rules for ParentRefs which cross namespace
                          boundaries. Cross-namespace references are only valid if they are explicitly
                          allowed by something in the namespace they are referring to. For example:
                          Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                          generic way to enable any other kind of cross-namespace reference.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port is the network port this Route targets. It can be interpreted
                          differently based on the type of parent resource.

                          When the parent resource is a Gateway, this targets all listeners
                          listening on the specified port that also support this kind of Route(and
                          select this Route). It's not recommended to set `Port` unless the
                          networking behaviors specified in a Route must apply to a specific port
                          as opposed to a listener(s) whose port(s) may be changed.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: |-
                          SectionName is the name of a section within the target resource. In the
                          following resources, SectionName is interpreted as the following:

                          * Gateway: Listener name. When both Port (experimental) and SectionName
                          are specified, the name and port of the selected listener must match
                          both specified values.
                          * Service: Port name. When both Port (experimental) and SectionName
                          are specified, the name and port of the selected listener must match
                          both specified values.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    type: object
                  routeTemplate:
                    description: |-
                      RouteTemplate overrides the HTTP path template used for routing.
                      The value is rendered against the AIMService object using JSONPath expressions.
                    type: string
                type: object
              runtimeConfigName:
                default: default
                description: RuntimeConfigName references the AIM runtime configuration
                  (by name) to use for this service.
                type: string
              templateRef:
                description: |-
                  TemplateRef is the name of the AIMServiceTemplate or AIMClusterServiceTemplate to use.
                  The template selects the runtime profile and GPU parameters.
                type: string
            required:
            - aimImageName
            type: object
          status:
            description: AIMServiceStatus defines the observed state of AIMService.
            properties:
              conditions:
                description: Conditions represent the latest observations of template
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller.
                format: int64
                type: integer
              resolvedImage:
                description: ResolvedImage captures metadata about the image that
                  was resolved.
                properties:
                  kind:
                    description: Kind is the fully-qualified kind of the resolved
                      reference, when known.
                    type: string
                  name:
                    description: Name is the resource name that satisfied the reference.
                    type: string
                  namespace:
                    description: |-
                      Namespace identifies where the resource was found when namespace-scoped.
                      Empty indicates a cluster-scoped resource.
                    type: string
                  scope:
                    description: Scope indicates whether the resolved resource was
                      namespace or cluster scoped.
                    enum:
                    - Namespace
                    - Cluster
                    - Unknown
                    type: string
                  uid:
                    description: UID captures the unique identifier of the resolved
                      reference, when known.
                    type: string
                type: object
              resolvedRuntimeConfig:
                description: ResolvedRuntimeConfig captures metadata about the runtime
                  config that was resolved.
                properties:
                  kind:
                    description: Kind is the fully-qualified kind of the resolved
                      reference, when known.
                    type: string
                  name:
                    description: Name is the resource name that satisfied the reference.
                    type: string
                  namespace:
                    description: |-
                      Namespace identifies where the resource was found when namespace-scoped.
                      Empty indicates a cluster-scoped resource.
                    type: string
                  scope:
                    description: Scope indicates whether the resolved resource was
                      namespace or cluster scoped.
                    enum:
                    - Namespace
                    - Cluster
                    - Unknown
                    type: string
                  uid:
                    description: UID captures the unique identifier of the resolved
                      reference, when known.
                    type: string
                type: object
              resolvedTemplate:
                description: ResolvedTemplate captures metadata about the template
                  that satisfied the reference.
                properties:
                  kind:
                    description: Kind is the fully-qualified kind of the resolved
                      reference, when known.
                    type: string
                  name:
                    description: Name is the resource name that satisfied the reference.
                    type: string
                  namespace:
                    description: |-
                      Namespace identifies where the resource was found when namespace-scoped.
                      Empty indicates a cluster-scoped resource.
                    type: string
                  scope:
                    description: Scope indicates whether the resolved resource was
                      namespace or cluster scoped.
                    enum:
                    - Namespace
                    - Cluster
                    - Unknown
                    type: string
                  uid:
                    description: UID captures the unique identifier of the resolved
                      reference, when known.
                    type: string
                type: object
              routing:
                description: Routing surfaces information about the configured HTTP
                  routing, when enabled.
                properties:
                  path:
                    description: |-
                      Path is the HTTP path prefix used when routing is enabled.
                      Example: `/tenant/svc-uuid`.
                    type: string
                type: object
              status:
                default: Pending
                description: |-
                  Status represents the current high‑level status of the service lifecycle.
                  Values: `Pending`, `Starting`, `Running`, `Failed`, `Degraded`.
                enum:
                - Pending
                - Starting
                - Running
                - Failed
                - Degraded
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
