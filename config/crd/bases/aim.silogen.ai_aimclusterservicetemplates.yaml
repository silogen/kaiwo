---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: aimclusterservicetemplates.aim.silogen.ai
spec:
  group: aim.silogen.ai
  names:
    categories:
    - aim
    - all
    kind: AIMClusterServiceTemplate
    listKind: AIMClusterServiceTemplateList
    plural: aimclusterservicetemplates
    shortNames:
    - aimclst
    singular: aimclusterservicetemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.profile.metadata.engine
      name: Engine
      type: string
    - jsonPath: .status.profile.metadata.metric
      name: Metric
      type: string
    - jsonPath: .status.profile.metadata.precision
      name: Precision
      type: string
    - jsonPath: .status.profile.metadata.gpu_count
      name: GPUs/replica
      type: integer
    - jsonPath: .status.profile.metadata.gpu
      name: GPU
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              AIMClusterServiceTemplateSpec defines the desired state of AIMClusterServiceTemplate (cluster-scoped).

              A cluster-scoped template that selects a runtime profile for a given AIM model.
            properties:
              gpuSelector:
                description: |-
                  GpuSelector specifies GPU requirements for each replica.
                  Defines the GPU count and model type required for deployment.
                  This field is immutable after creation.
                properties:
                  count:
                    description: |-
                      Count is the number of GPU resources requested per replica.
                      Must be at least 1.
                    format: int32
                    minimum: 1
                    type: integer
                  model:
                    description: |-
                      Model is the GPU model name required for this deployment.
                      Examples: "MI300X", "MI325X"
                    minLength: 1
                    type: string
                  resourceName:
                    default: amd.com/gpu
                    description: |-
                      ResourceName is the Kubernetes resource name for GPU resources.
                      Defaults to "amd.com/gpu" if not specified.
                    type: string
                required:
                - count
                - model
                type: object
                x-kubernetes-validations:
                - message: gpuSelector is immutable
                  rule: self == oldSelf
              metric:
                allOf:
                - enum:
                  - latency
                  - throughput
                - enum:
                  - latency
                  - throughput
                description: |-
                  Metric selects the optimization goal.

                  - `latency`: prioritize low end‑to‑end latency
                  - `throughput`: prioritize sustained requests/second
                type: string
                x-kubernetes-validations:
                - message: metric is immutable
                  rule: self == oldSelf
              modelName:
                description: |-
                  ModelName is the model name. Matches `metadata.name` of an AIMModel or AIMClusterModel. Immutable.

                  Example: `meta/llama-3-8b:1.1+20240915`
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: model name is immutable
                  rule: self == oldSelf
              modelSources:
                description: |-
                  ModelSources specifies the model artifacts required to run this template.
                  When provided, the discovery dry-run will be skipped and these sources will be used directly.
                  This allows users to explicitly declare model dependencies without requiring a discovery job.
                  If omitted, a discovery job will be run to automatically determine the required model sources.
                items:
                  description: |-
                    AIMModelSource describes a model artifact that must be downloaded for inference.
                    Discovery extracts these from the container's configuration to enable caching and validation.
                  properties:
                    name:
                      description: |-
                        Name is a human-readable identifier for this model artifact.
                        May be empty if the source represents the primary model.
                      type: string
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        Size is the expected storage space required for this model artifact.
                        Used for PVC sizing and capacity planning during cache creation.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    sourceUri:
                      description: |-
                        SourceURI is the location from which the model should be downloaded.
                        Supported schemes:
                        - hf://org/model - Hugging Face Hub model
                        - s3://bucket/key - S3-compatible storage
                      pattern: ^(hf|s3)://[^ \t\r\n]+$
                      type: string
                  required:
                  - size
                  - sourceUri
                  type: object
                type: array
              precision:
                allOf:
                - enum:
                  - bf16
                  - fp16
                  - fp8
                  - int8
                - enum:
                  - auto
                  - fp4
                  - fp8
                  - fp16
                  - fp32
                  - bf16
                  - int4
                  - int8
                description: Precision selects the numeric precision used by the runtime.
                type: string
                x-kubernetes-validations:
                - message: precision is immutable
                  rule: self == oldSelf
              resources:
                description: |-
                  Resources defines the default container resource requirements applied to services derived from this template.
                  Service-specific values override the template defaults.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              runtimeConfigName:
                default: default
                description: RuntimeConfigName references the AIM runtime configuration
                  (by name) to use for this template.
                type: string
            required:
            - modelName
            type: object
          status:
            description: AIMServiceTemplateStatus defines the observed state of AIMServiceTemplate.
            properties:
              conditions:
                description: Conditions represent the latest observations of template
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              modelSources:
                description: |-
                  ModelSources list the models that this template requires to run. These are the models that will be
                  cached, if this template is cached.
                items:
                  description: |-
                    AIMModelSource describes a model artifact that must be downloaded for inference.
                    Discovery extracts these from the container's configuration to enable caching and validation.
                  properties:
                    name:
                      description: |-
                        Name is a human-readable identifier for this model artifact.
                        May be empty if the source represents the primary model.
                      type: string
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        Size is the expected storage space required for this model artifact.
                        Used for PVC sizing and capacity planning during cache creation.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    sourceUri:
                      description: |-
                        SourceURI is the location from which the model should be downloaded.
                        Supported schemes:
                        - hf://org/model - Hugging Face Hub model
                        - s3://bucket/key - S3-compatible storage
                      pattern: ^(hf|s3)://[^ \t\r\n]+$
                      type: string
                  required:
                  - size
                  - sourceUri
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller.
                format: int64
                type: integer
              profile:
                description: |-
                  Profile contains the full discovery result profile as a free-form JSON object.
                  This includes metadata, engine args, environment variables, and model details.
                properties:
                  engine_args:
                    description: |-
                      EngineArgs contains runtime-specific engine configuration as a free-form JSON object.
                      The structure depends on the inference engine being used (e.g., vLLM, TGI).
                      These arguments are passed to the runtime container to configure model loading and inference.
                    x-kubernetes-preserve-unknown-fields: true
                  env_vars:
                    additionalProperties:
                      type: string
                    description: |-
                      EnvVars contains environment variables required by the runtime for this profile.
                      These may include engine-specific settings, optimization flags, or hardware configuration.
                    type: object
                  metadata:
                    description: Metadata provides structured information about this
                      deployment profile's characteristics.
                    properties:
                      engine:
                        description: Engine identifies the inference engine used for
                          this profile (e.g., "vllm", "tgi").
                        type: string
                      gpu:
                        description: GPU specifies the GPU model this profile is optimized
                          for (e.g., "MI300X", "MI325X").
                        type: string
                      gpu_count:
                        description: GPUCount indicates how many GPUs are required
                          per replica for this profile.
                        format: int32
                        type: integer
                      metric:
                        description: Metric indicates the optimization goal for this
                          profile ("latency" or "throughput").
                        enum:
                        - latency
                        - throughput
                        type: string
                      precision:
                        description: Precision specifies the numeric precision used
                          in this profile (e.g., "fp16", "fp8").
                        enum:
                        - bf16
                        - fp16
                        - fp8
                        - int8
                        type: string
                    type: object
                type: object
              resolvedImage:
                description: ResolvedImage captures metadata about the image that
                  was resolved.
                properties:
                  kind:
                    description: Kind is the fully-qualified kind of the resolved
                      reference, when known.
                    type: string
                  name:
                    description: Name is the resource name that satisfied the reference.
                    type: string
                  namespace:
                    description: |-
                      Namespace identifies where the resource was found when namespace-scoped.
                      Empty indicates a cluster-scoped resource.
                    type: string
                  scope:
                    description: Scope indicates whether the resolved resource was
                      namespace or cluster scoped.
                    enum:
                    - Namespace
                    - Cluster
                    - Merged
                    - Unknown
                    type: string
                  uid:
                    description: UID captures the unique identifier of the resolved
                      reference, when known.
                    type: string
                type: object
              resolvedRuntimeConfig:
                description: ResolvedRuntimeConfig captures metadata about the runtime
                  config that was resolved.
                properties:
                  kind:
                    description: Kind is the fully-qualified kind of the resolved
                      reference, when known.
                    type: string
                  name:
                    description: Name is the resource name that satisfied the reference.
                    type: string
                  namespace:
                    description: |-
                      Namespace identifies where the resource was found when namespace-scoped.
                      Empty indicates a cluster-scoped resource.
                    type: string
                  scope:
                    description: Scope indicates whether the resolved resource was
                      namespace or cluster scoped.
                    enum:
                    - Namespace
                    - Cluster
                    - Merged
                    - Unknown
                    type: string
                  uid:
                    description: UID captures the unique identifier of the resolved
                      reference, when known.
                    type: string
                type: object
              status:
                default: Pending
                description: |-
                  Status represents the current high‑level status of the template lifecycle.
                  Values: `Pending`, `Progressing`, `Ready`, `Failed`, `NotAvailable`.
                enum:
                - Pending
                - Progressing
                - NotAvailable
                - Ready
                - Degraded
                - Failed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
