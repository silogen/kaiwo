apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-uploader-script
data:
  entrypoint.py: |
    import os
    import boto3
    from botocore.exceptions import ClientError
    from cloudpathlib import AnyPath, CloudPath, S3Client

    S3_ENDPOINT_URL = os.getenv("S3_ENDPOINT_URL", "http://minio-service:9000")
    S3_ACCESS_KEY = os.getenv("S3_ACCESS_KEY", "minio")
    S3_SECRET_KEY = os.getenv("S3_SECRET_KEY", "minio123")
    TEST_BUCKET_NAME = os.getenv("TEST_BUCKET_NAME", "test-bucket")
    TEST_FILE_NAME = "test-upload.txt"
    TEST_FILE_CONTENT = "Hello from Kubernetes!"

    def get_s3_test_root():
        s3_client = boto3.client(
            "s3",
            aws_access_key_id=S3_ACCESS_KEY,
            aws_secret_access_key=S3_SECRET_KEY,
            endpoint_url=S3_ENDPOINT_URL,
        )
        try:
            s3_client.head_bucket(Bucket=TEST_BUCKET_NAME)
        except ClientError:
            s3_client.create_bucket(Bucket=TEST_BUCKET_NAME)

        return AnyPath(
            f"s3://{TEST_BUCKET_NAME}",
            client=S3Client(
                aws_access_key_id=S3_ACCESS_KEY,
                aws_secret_access_key=S3_SECRET_KEY,
                endpoint_url=S3_ENDPOINT_URL,
            ),
        )

    def upload_test_file():
        s3_path = get_s3_test_root() / TEST_FILE_NAME
        s3_path.write_text(TEST_FILE_CONTENT)
        print(f"Uploaded file to: {s3_path}")

    if __name__ == "__main__":
        upload_test_file()
---

apiVersion: batch/v1
kind: Job
metadata:
  name: s3-uploader
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: s3-uploader
        image: ghcr.io/silogen/kaiwo-python:0.5
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        command: ["python", "/app/entrypoint.py"]
        volumeMounts:
        - name: app-script
          mountPath: /app
        env:
        - name: S3_ENDPOINT_URL
          value: "http://minio-service:9000"
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access_key_id
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret_key
        - name: TEST_BUCKET_NAME
          value: "test-bucket"
      volumes:
      - name: app-script
        configMap:
          name: s3-uploader-script
