---
repositories:
  - name: rocm
    url: https://rocm.github.io/gpu-operator
  - name: nfs-ganesha-server-and-external-provisioner
    url: https://kubernetes-sigs.github.io/nfs-ganesha-server-and-external-provisioner/

releases:
  - name: amd-gpu-operator
    namespace: kube-amd-gpu
    chart: rocm/gpu-operator-charts
    version: v1.3.0
    createNamespace: false
    # install only if gpuType == "amd" in the state-values file and not in vcluster
    installed: {{ and (eq .Values.gpuType "amd") (not .Values.vcluster) }}
    values:
      - upgradeCRD: false
      - crds:
          defaultCR:
            install: false

  - name: nfs-provisioner
    namespace: storage
    chart: nfs-ganesha-server-and-external-provisioner/nfs-server-provisioner
    version: 1.8.0
    createNamespace: true
    installed: {{ not .Values.vcluster }}
    values:
      - persistence:
          enabled: {{ .Values.nfs.persistence.enabled | default false }}
          {{- if .Values.nfs.persistence.enabled }}
          existingClaim: pvc-nfs-backing
          {{- end }}
      - storageClass:
          create: true
          name: rwx-nfs

  - name: kgateway-crd
    namespace: kgateway-system
    chart: oci://cr.kgateway.dev/kgateway-dev/charts/kgateway-crds
    version: v2.1.0-main
    createNamespace: true
    wait: true
    timeout: 600

  - name: kgateway
    namespace: kgateway-system
    chart: oci://cr.kgateway.dev/kgateway-dev/charts/kgateway
    version: v2.1.0-main
    createNamespace: false
    wait: true
    timeout: 600
    needs:
      - kgateway-system/kgateway-crd
    values:
      - agentgateway:
          enabled: true

  - name: kserve-crd
    namespace: kserve-system
    chart: oci://ghcr.io/kserve/charts/kserve-crd
    version: v0.15.2
    createNamespace: true
    wait: true
    timeout: 600

  - name: kserve
    namespace: kserve-system
    chart: oci://ghcr.io/kserve/charts/kserve
    version: v0.15.2
    createNamespace: false
    wait: true
    timeout: 600
    needs:
      - kserve-system/kserve-crd
    values:
      - kserve:
          controller:
            deploymentMode: RawDeployment
            gateway:
              ingressGateway:
                enableGatewayApi: true
                kserveGateway: kgateway-system/kserve-ingress-gateway
          localmodel:
            enabled: false